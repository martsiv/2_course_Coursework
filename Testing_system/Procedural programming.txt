<TEST> <CTG> Dev <CTG/> <NAME> Procedural programming <NAME/> 
<DSCR> Which of the following programming languages is NOT a procedural programming language? <DSCR/> <QOA> <AANS> <EANS> C++ <EANS/> <EANS> Fortran <EANS/> <EANS> Python <EANS/> <EANS> Prolog <EANS/> <AANS/> <RANS> 4 <RANS/> <QOA/> 
<DSCR> Which of the following is NOT a feature of procedural programming? <DSCR/> <QOA> <AANS> <EANS> Emphasis on functions <EANS/> <EANS> Use of global variables <EANS/> <EANS> Use of pointers <EANS/> <EANS> Use of objects and classes <EANS/> <AANS/> <RANS> 4 <RANS/> <QOA/> 
<DSCR> Which of the following statements is true about procedural programming? <DSCR/> <QOA> <AANS> <EANS> It focuses on the flow of the program <EANS/> <EANS> It emphasizes on the data and its structure <EANS/> <EANS> It is based on the concept of objects and classes <EANS/> <EANS> It is used to solve complex mathematical problems <EANS/> <AANS/> <RANS> 1 <RANS/> <QOA/> 
<DSCR> Which of the following is a characteristic of a procedural program? <DSCR/> <QOA> <AANS> <EANS> Functions are not used <EANS/> <EANS> The main function is always the first function to be executed <EANS/> <EANS> The program is executed top-down <EANS/> <EANS> The use of objects is mandatory <EANS/> <AANS/> <RANS> 3 <RANS/> <QOA/> 
<DSCR> Which of the following is a benefit of using functions in procedural programming? <DSCR/> <QOA> <AANS> <EANS> Makes the code more readable and easier to maintain <EANS/> <EANS> Reduces the memory usage of the program <EANS/> <EANS> Makes the program run faster <EANS/> <EANS> Allows for object-oriented programming <EANS/> <AANS/> <RANS> 1 <RANS/> <QOA/> 
<DSCR> Which of the following is an example of a procedural programming construct? <DSCR/> <QOA> <AANS> <EANS> Looping <EANS/> <EANS> Inheritance <EANS/> <EANS> Encapsulation <EANS/> <EANS> Polymorphism <EANS/> <AANS/> <RANS> 1 <RANS/> <QOA/> 
<DSCR> Which of the following is NOT an advantage of procedural programming? <DSCR/> <QOA> <AANS> <EANS> It is easy to learn and use <EANS/> <EANS> It is easy to understand and debug <EANS/> <EANS> It is efficient in terms of memory usage and program execution speed <EANS/> <EANS> It provides good support for graphical user interfaces (GUIs) <EANS/> <AANS/> <RANS> 4 <RANS/> <QOA/> 
<DSCR> Which of the following statements is true about global variables in procedural programming? <DSCR/> <QOA> <AANS> <EANS> Global variables are accessible only within the function they are defined in <EANS/> <EANS> Global variables are accessible from any part of the program <EANS/> <EANS> Global variables are always passed by reference <EANS/> <EANS> Global variables are not allowed in procedural programming <EANS/> <AANS/> <RANS> 2 <RANS/> <QOA/> 
<DSCR> Which of the following is a disadvantage of using global variables in procedural programming? <DSCR/> <QMA> <AANS> <EANS> It makes the code more modular and easier to understand <EANS/> <EANS> It can cause naming conflicts and make the code difficult to debug <EANS/> <EANS> It can lead to memory leaks and other memory-related issues <EANS/> <EANS> It can make the program run slower <EANS/> <AANS/> <RANS> <EANS> 2 <EANS/> <EANS> 3 <EANS/> <RANS/> <QMA/> 
<DSCR> Which of the following is an example of a procedural programming language? <DSCR/> <QOA> <AANS> <EANS> Java <EANS/> <EANS> PHP <EANS/> <EANS> Assembly language <EANS/> <EANS> SQL <EANS/> <AANS/> <RANS> 3 <RANS/> <QOA/> 
<TEST/> 